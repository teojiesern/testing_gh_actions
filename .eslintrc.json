{
    "env": {
        "browser": true,
        "es2022": true
    },
    "extends": [
        "airbnb",
        // "plugin:@typescript-eslint/stylistic-type-checked",
        // "plugin:@tanstack/eslint-plugin-query/recommended",
        "airbnb/hooks",
        "airbnb/whitespace"
        // "airbnb-typescript"
        // "prettier"
    ],
    // "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    // "plugins": ["@typescript-eslint", "@tanstack/query", "i18next"],
    "rules": {
        "@typescript-eslint/dot-notation": "off",
        "import/no-default-export": "error",
        "import/prefer-default-export": "off",
        "quotes": ["warn", "single", { "avoidEscape": true }],
        "react/react-in-jsx-scope": "off",
        "react/jsx-props-no-spreading": "off",
        "react/require-default-props": "off",
        "react/style-prop-object": [
            "warn",
            {
                "allow": ["StatusBar"]
            }
        ],
        "max-len": [
            "warn",
            120,
            2,
            {
                "ignoreUrls": true,
                "ignoreComments": false,
                "ignoreRegExpLiterals": true,
                "ignoreStrings": true,
                "ignoreTemplateLiterals": true
            }
        ],
        "no-restricted-imports": [
            "error",
            {
                "patterns": [
                    {
                        "group": ["/react-native"],
                        "importNames": ["SafeAreaView"],
                        "message": "Please use SafeAreaView from react-native-safe-area-context instead"
                    },
                    {
                        "group": ["/react-native"],
                        "importNames": ["useColorScheme"],
                        "message": "Please use useTheme from Theme module instead"
                    },
                    {
                        "group": ["/react-native"],
                        "importNames": ["Button"],
                        "message": "Please use Button from Component module instead"
                    },
                    {
                        "group": ["@react-navigation/native"],
                        "importNames": ["Theme", "useTheme"],
                        "message": "Please use Theme and useTheme from Theme module instead"
                    },
                    {
                        "group": ["react-content-loader"],
                        "importNames": ["List"],
                        "message": "If you are looking for custom List component, import 'app/platform/components/list/List' instead"
                    },
                    {
                        "group": ["react-native-pdf"],
                        "message": "Please use PDF from pdf platform module instead"
                    },
                    {
                        "group": ["/react-native-mmkv"],
                        "message": "If you are looking for Storage use case, import 'app/platform/storage/domain/useCases/useStorage instead"
                    },
                    {
                        "group": ["i18next"],
                        "importNames": ["t"],
                        "message": "If you are looking for translation use case, import { useTranslation } from 'react-i18next' instead"
                    }
                ]
            }
        ],
        "class-methods-use-this": 0,
        "@typescript-eslint/prefer-nullish-coalescing": "off",
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "i18next/no-literal-string": "warn",
        "react-hooks/exhaustive-deps": [
            "warn",
            {
                "additionalHooks": "(useDebounce|useErrorState|useAnimatedStyle|useWorkletCallback|useDerivedValue)$"
            }
        ],
        "@typescript-eslint/unbound-method": [
            "error",
            {
                "ignoreStatic": true
            }
        ] // to check any method that is not .bind correctly
    }
    // "overrides": [
    //     {
    //         "files": ["app/platform/navigation/Stack.ts"],
    //         "rules": {
    //             "@typescript-eslint/consistent-type-imports": "error"
    //         }
    //     },
    //     {
    //         "files": [
    //             "app/modules/deposit**/**/*.ts?(x)",
    //             "app/modules/transaction**/**/*.ts?(x)",
    //             "app/modules/pocket**/**/*.ts?(x)",
    //             "app/modules/**Pocket**/**/*.ts?(x)",
    //             "app/modules/insights/**/*.ts?(x)"
    //         ],
    //         "rules": {
    //             "@typescript-eslint/no-non-null-assertion": "warn",
    //             "@typescript-eslint/consistent-type-imports": "error"
    //         }
    //     },
    //     {
    //         "files": ["**/__test?(s)__/**/*.ts?(x)"],
    //         "plugins": ["jest", "jest-formatting"],
    //         "extends": ["plugin:jest/recommended", "plugin:jest/style", "plugin:jest-formatting/recommended"],
    //         "env": {
    //             "jest/globals": true
    //         },
    //         "rules": {
    //             "@typescript-eslint/consistent-type-imports": "error",
    //             "import/no-extraneous-dependencies": [
    //                 "error",
    //                 {
    //                     "devDependencies": true
    //                 }
    //             ],
    //             "jest/consistent-test-it": "error",
    //             "jest/prefer-each": "error",
    //             "jest/prefer-equality-matcher": "error",
    //             "jest/prefer-expect-resolves": "error",
    //             "jest/prefer-hooks-in-order": "error",
    //             "jest/prefer-hooks-on-top": "error",
    //             "jest/prefer-mock-promise-shorthand": "error",
    //             "jest/prefer-todo": "error"
    //         }
    //     }
    // ]
}
